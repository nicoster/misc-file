<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE jep SYSTEM 'ijep.dtd' [
    <!ENTITY % ents SYSTEM "ijep.ent">
    %ents;
    <!ENTITY % xsf-ents SYSTEM "xep.ent">
    %xsf-ents;
]>
<?xml-stylesheet type='text/xsl' href='ijep.xsl'?>
<jep>
<header>
  <title>Group Presence - LDAP Integration</title>
  <abstract>Document how to subscribe/unsubscribe LDAP groups, get members under groups and presences for each member from Group Server. This document is primarily based on Joe Hildebrand's mails.</abstract>
  <!-- the following line pulls in the standard legal notice; comment it out if you are viewing your XML file in a browser that does not support external entities (e.g., Mozilla) -->
  &CISCOLEGAL;
  <!-- uncomment the following line to view the XML file in a browser
  <legal>Copyright 2000 - 2008 by Cisco Systems, Inc. The information contained in this document is proprietary to Cisco Systems, Inc. This information is considered CISCO CONFIDENTIAL and is not to be disclosed to any outside parties without the express written consent of Cisco Systems, Inc. This document is provided for informational purposes only, and the information herein is subject to change without notice.  Cisco Systems, Inc. does not provide any warranties covering and specifically disclaims any liability in connection with this document.</legal>
  -->
  <number>070</number>
  <status>Experimental</status>
  <type>Standards Track</type>
  <jig>Cisco Systems, Inc.</jig>
  <dependencies>XEP-0060, XEP-0237, XEP-0030, XEP-0055, XEP-0068, XEP-0128, RFC-3291</dependencies>
  <author>
    <firstname>Nick</firstname>
    <surname>Xiao</surname>
    <email>nickx@sz.webex.com</email>
    <jid>nicoster@gmail.com</jid>
  </author>
  <revision>
    <version>0.1</version>
    <date>2009-02-04</date>
    <initials>The group presence was introduced in Connect C6.</initials>
    <remark>Initial version.</remark>
  </revision>
  <revision>
    <version>0.2</version>
    <date>2009-03-04</date>
    <remark>Add some error cases handling. Add node deletion notification example.</remark>
  </revision>
</header>
<section1 topic='Introduction'>
  <p>The WebEx Connect product enables user to subscribe/unsubscribe
  to an LDAP group from a Group Server, thus get the members and their
  presences under the groups. This document defines how the client
  communicates with the Group Server</p>

  <section2 topic='Terminology'>
    <ul>
      <li><strong>Group Server</strong>: A component for Jabber Server
      which retrieves the LDAP info from LDAP server and sends the
      LDAP group/member info to clients via Connection Server, and
      retrieves the presence info from Jabber Server and sends it to
      clients.</li>
      <li><strong>Connection Server</strong>:A component which forwards stanzas from Group Server to clients.</li>
      <li><strong>Connection Server Manager</strong>: A service which
      provides the closest Connection Server available to the client
      upon a request of disco#items &xep0030;.</li>
      </ul>
   </section2>
</section1>

<section1 topic='Protocol'>
  <section2 topic='Protocol Overview'>
  </section2>
  <section2 topic='Protocol Flows'>
    <section3 topic='Discover Connection Server'>
      <p>Client sends a disco#items &xep0030; to get the list of server components, 
      then a disco#info to each one to get their features. The one with the feature of 
      "http://webex.com/connect/cs" is the Connection Server.</p>
      <example caption='client sends a disco#items'><![CDATA[
<iq type='get'
    from='joe@example.com/home'
    id='items1'>
  <query xmlns='http://jabber.org/protocol/disco#items'/>
</iq>
]]></example>

      <example caption='The server returns the list of component'><![CDATA[
<iq type='result'
    from='example.com'
    to='joe@example.com/home'
    id='items1'>
  <query xmlns='http://jabber.org/protocol/disco#items'>
    <item jid='csmgr.example.com'
          name='Connection Server Manager'/>
    <item jid='conference.example.com'
          name='Chatrooms'/>
  </query>
</iq>
]]></example>

      <example caption='The client sends a disco#info'><![CDATA[
<iq type='get'
    from='joe@example.com/home'
    to='csmgr.example.com'
    id='info1'>
  <query xmlns='http://jabber.org/protocol/disco#info'/>
</iq>
]]></example>

      <example caption='The server return'><![CDATA[
<iq type='result'
    from='csmgr.example.com'
    from='joe@example.com/home'
    id='info1'>
  <query xmlns='http://jabber.org/protocol/disco#info'>
    <identity
        category='component'
        type='generic'
        name='Connection Server Manager'/>
    <feature var='http://jabber.org/protocol/disco#info'/>
    <feature var='http://jabber.org/protocol/disco#items'/>
    <feature var='http://webex.com/connect/cs'/>
  </query>
</iq>
]]></example>

    </section3>
    <section3 topic='Subscribe Group / Push Group Info'>
      <p>When a user got the group id ("GROUPID1") via a group search,
      the user subscribes to the "GROUPID1" group for the first time
      (&xep0060;, section 6.1.1):</p>

      <example caption='Subscribe Group'><![CDATA[
<iq type='set' 
    to='cs.example.com' 
    id='sub1'> 
  <pubsub xmlns='http://jabber.org/protocol/pubsub'> 
    <subscribe 
        node='GROUPID1' 
        jid='joe@webex.com'/> 
  </pubsub> 
</iq>

The server returns:
<iq type='result' 
    from='cs.example.com' 
    id='sub1'> 
  <pubsub xmlns='http://jabber.org/protocol/pubsub'> 
    <subscription 
        node='GROUPID1' 
        jid='joe@webex.com' 
        subid='ba49252aaa4f5d320c24d3766f0bdcade78c78d3' 
        subscription='subscribed'/> 
  </pubsub> 
</iq>
]]></example>
      <p>The user specifies bare JID for the subscription, which means
      this subscription is long-lived, It would only need to be done
      once, and could be stored by the Group Server. </p>
            
      <p>Refer to &xep0060; section 6.1.3 for the error cases.</p>

      <p>Then, according to &xep0060; section 6.1.7, the server
      automatically pushes *all* of the current information for the
      group.  The server MAY decide how many stanzas to generate,
      containing however many items makes sense.</p>

      <example caption='Server Pushes Group Info'><![CDATA[
<message from='cs.example.com' to='joe@webex.com/home' > 
  <event xmlns='http://jabber.org/protocol/pubsub#event'> 
    <items node='GROUPID1' name='GROUPNAME'> 
      <item id='ID1'> 
        <member xmlns="http://webex.com/connect/cs" 
                displayname="DISPLAYNAME1" 
                username="USERNAME1" 
                jobtitle="JOBTITLE1" 
                phone="PHONE1" 
                email="EMAIL1" 
                ssoid="SSOID1"/> 
      </item> 
      <item id='ID2'> 
        <member xmlns="http://webex.com/connect/cs" 
                displayname="DISPLAYNAME2" 
                username="USERNAME2" 
                jobtitle="JOBTITLE2" 
                phone="PHONE2" 
                email="EMAIL2" 
                ssoid="SSOID2"/> 
      </item> 
    </items> 
  </event> 
  <delay xmlns='urn:xmpp:delay' stamp='2003-12-13T23:58:37Z'/> 
  <seq xmlns='urn:xmpp:tmp:seq' num='305'/> 
</message>
]]></example>
      <p>the delay tag indicates this stanza is the initial bulk push for group info. 
      client MAY use this tag to distinguish between initial push or new updates 
      of the group info for performance concern.</p>

      <p>If there's a change to the group name, the server SHOULD send updates.</p>
      
      <example caption='Server Pushes Group Info Updates'><![CDATA[
<message from='cs.example.com' to='joe@webex.com/home' > 
  <event xmlns='http://jabber.org/protocol/pubsub#event'> 
    <items node='GROUPID1' name='NEW-GROUPNAME' /> 
  </event> 
  <seq xmlns='urn:xmpp:tmp:seq' num='123'/> 
</message>
]]></example>
      
      <p>If there is a change to the group membership, the server
      SHOULD send updates.</p>
      <example caption='Server Pushes Group Info Updates(alt)'><![CDATA[
<message from='cs.example.com' to='joe@webex.com/home' > 
  <event xmlns='http://jabber.org/protocol/pubsub#event'> 
    <items node='GROUPID1'> 
      <item id='ID2'> 
        <member xmlns="http://webex.com/connect/cs" 
                displayname="DISPLAYNAME2 - New" 
                username="USERNAME2" 
                jobtitle="JOBTITLE2" 
                phone="PHONE2" 
                email="EMAIL2" 
                ssoid="SSOID2"/> 
      </item> 
    </items> 
  </event> 
  <seq xmlns='urn:xmpp:tmp:seq' num='306'/> 
</message>
]]></example>

      <p>Each update has a new sequence number.  New notifications do not have a delay stamp.</p>

      <p>Delete notifications are specified in section 7.2.2.1 of &xep0060;:</p>
      <example caption='Server Pushes Group Info Updates (alt)'><![CDATA[
<message from='cs.example.com' to='joe@webex.com/home' > 
  <event xmlns='http://jabber.org/protocol/pubsub#event'> 
    <items node='GROUPID1'> 
      <retract id='ID1'/> 
    </items> 
  </event> 
  <seq xmlns='urn:xmpp:tmp:seq' num='456'/> 
</message>
]]></example>
      <p>If a group has been deleted, the service MUST send notification of node deletion to all subscribers. &xep0060; section 8.4.2</p>
        
      <p>Server MAY merge different updates into one stanza for performance concern.</p>
      <example caption='Server Pushes Group Info Hybrid Updates'><![CDATA[
<message from='cs.example.com' to='joe@webex.com/home' > 
  <event xmlns='http://jabber.org/protocol/pubsub#event'> 
    <items node='GROUPID1'> 
      <item id='ID2'> 
        <member xmlns="http://webex.com/connect/cs" 
                displayname="DISPLAYNAME2 - New" 
                username="USERNAME2" 
                jobtitle="JOBTITLE2" 
                phone="PHONE2" 
                email="EMAIL2" 
                ssoid="SSOID2"/> 
      </item> 
      <retract id='ID1'/> 
   </items> 
  </event> 
  <seq xmlns='urn:xmpp:tmp:seq' num='306'/> 
</message>
]]></example>

      <p>When a group gets deleted, server SHOULD send notification to client:</p>

	<example caption='Subscribers are notified of node deletion'><![CDATA[
<message from='cs.example.com' to='joe@webex.com/home' > 
  <event xmlns='http://jabber.org/protocol/pubsub#event'>
    <delete node='GROUPID1'/>
  </event>
</message>
]]></example>
    </section3>

    <section3 topic='Activate subscriptions'>
      <p>After sign in, to activate all of the subscriptions, the
      client SHOULD direct a presence stanza to the CS on startup:</p>

      <example caption='Activate all Subscriptions'><![CDATA[
<presence to='cs.example.com'
          from='joe@webex.com/home'>
  <x xmlns='http://webex.com/connect/cs' type='initial'/>
  <delay xmlns='urn:xmpp:delay' stamp='2002-09-10T23:08:25Z'> 
</presence>
]]></example>

      <p>The 'x' tag with the xmlns of 'http://webex.com/connect/cs'
      indicates that this presence stanza is to activate
      subscriptions. the attribute of 'type' has two possible values:
      initial, failover. 'initial' means this presence is directed
      after client signing on, while 'failover' means client directs a
      presence after the notification of the last will of a failovered
      CS. (2.2.6 Failover Handling)</p>

      <p>The delay tag is &xep0203; (the new and correct date/time
      format).  The datetime is the last time the client logged off,
      in UTC, as reported by the client operating system.  It signals
      that the client is maintaining a cache of published presence
      through a restart.  It should only be added if that cache is
      being maintained, and if you've been offline less than N
      hours (for example, less than 24, and more than 1). The server
      sends all of the current presence notifications to the client
      for all of its subscriptions that have come in since the delay
      stamp specified by the client minus about 5 minutes to account
      for clock skew between the client and server.</p>

      <p>If client directs a presence without a delay tag, server
      SHOULD send all info for all of the currently subscribed groups
      to client.</p>
    </section3>

    <section3 topic='Unsubscribe Group'>
      <example caption='Unsubscribe Group'><![CDATA[
<iq type='set'
    from='joe@example.com/home'
    to='cs.example.com'
    id='unsub1'>
  <pubsub xmlns='http://jabber.org/protocol/pubsub'>
     <unsubscribe
         node='GROUPID1'
         jid='joe@example.com'/>
  </pubsub>
</iq>
]]></example>           

      <example caption='Service replies with success'><![CDATA[
<iq type='result'
    from='cs.example.com'
    to='joe@example.com/home'
    id='unsub1'/>
]]></example>
      <p>Refer to &xep0060; section 6.2.3 for the error cases.</p>
    </section3>
    <section3 topic='Retrieve Subscriptions'>
      <p>After sign in, the client MAY query all the subscribed groups
      from group server.</p>

      <example caption='Entity requests all current subscriptions'><![CDATA[
The client sends:
<iq type='get'
    from='juliet@example.com/home'
    to='cs.example.com'
    id='subscriptions1'>
  <pubsub xmlns='http://jabber.org/protocol/pubsub'>
    <subscriptions/>
  </pubsub>
</iq>

The server returns:
<iq type='result'
    from='cs.example.com'
    to='juliet@example.com/home'
    id='subscriptions1'>
  <pubsub xmlns='http://jabber.org/protocol/pubsub'>
    <subscriptions>
      <subscription node='GROUPID1' jid='juliet@example.com' subscription='subscribed'/>
      <subscription node='GROUPID2' jid='juliet@example.com' subscription='subscribed'/>
      <subscription node='GROUPID5' jid='juliet@example.com' subscription='unconfigured'/>
      <subscription node='GROUPID8' jid='juliet@example.com' subscription='pending'/>
    </subscriptions>
  </pubsub>
</iq>
]]></example>
      <p>If there's no subscription, server returns an empty <subscriptions/> element:</p>
			<example caption='No subscriptions'><![CDATA[
<iq type='result'
    from='pubsub.shakespeare.lit'
    to='francisco@denmark.lit/barracks'
    id='subscriptions1'>
  <pubsub xmlns='http://jabber.org/protocol/pubsub'>
    <subscriptions/>
  </pubsub>
</iq>
]]></example>

    </section3>
    <section3 topic='Failover Handling'>
      <p>When connection server receives a directed presence from a
      client for activating the subscriptions, CS registers a last
      will and testament with the JSM. (&ijep019;, section 6.5)</p>

      <example caption='Client directs presence'><![CDATA[
<presence to="cs.example.com" from="joe@example.com/home"/>
]]></example>

      <example caption='Service Registers Last Will and Testament'><![CDATA[
<route to="joe@example.com/home' from="cs.router1" type="internal" id="c8">
  <internal type="fire-forget" command="lwat-register">
    <presence to="joe@example.com/home" from="cs.example.com" type="error">
      <error type='cancel'>
        <service-unavailable xmlns='urn:ietf:params:xml:ns:xmpp-stanzas'/>
     </error>
    </presence>
  </internal>
</route>
]]></example>
      
      <p>At some time in the feature, when CS goes down unexpectedly,
      JSM willl send the registered packet to the client. (IJEP-19,
      section 6.5.2)</p>

      <example caption='JSM sends the Last Will to Client'><![CDATA[
<presence to="joe@example.com/home" from="cs.example.com" type="error">
    <error type='cancel'>
        <service-unavailable xmlns='urn:ietf:params:xml:ns:xmpp-stanzas'/>
    </error>
</presence>
]]></example>

      <p>When the client gets notified of the unavailability of the
      connection server, it directs a presence to the connection
      server to activate subscriptions again. Usually there's a
      cluster for connection server, the presence will be redirected
      to a new connection server in the cluster. After the directed
      presenct, client SHOULD clear the local cache of group data, get
      ready to receive the group data pushed by the new connection
      server (although with the same JID, 'cs.example.com' in this
      case)</p>
      <example caption='Activate Subscriptions in the New CS'><![CDATA[
<presence to='cs.example.com'
          from='joe@webex.com/home'>
  <x xmlns='http://webex.com/connect/cs' type='failover'/>
</presence>
]]></example>       

      <p>The 'x' tag with the xmlns of 'http://webex.com/connect/cs'
      indicates this is a directed presence to activate
      subscriptions. The type of 'failover' indicates this presence is
      directed after failover.</p>

    </section3>
    <section3 topic='Search Group / Group Name Lookup / Search Buddy / Buddy Name Lookup'>
      <p>Client use &xep0055; to do searching or Lookup.</p>
      <example caption='Client Request Search Fields from Service'><![CDATA[
<iq type='get'
    from='juliet@example.com/balcony'
    to='cs.example.com'
    id='search3'
    xml:lang='en'>
    <query xmlns='jabber:iq:search'/>
</iq>
]]></example>

      <example caption='Service Returns Search Form to Client'><![CDATA[
<iq type='result'
  from='cs.example.com'
  to='juliet@example.com/balcony'
  id='search3'
  xml:lang='en'>
    <query xmlns='jabber:iq:search'>
      <x xmlns='jabber:x:data' type='form'>
          <title>Group Search</title>
          <instructions>Please provide the following 
infomation to search for groups.</instructions>
          <field type='hidden' var='FORM_TYPE'>
            <value>http://webex.com/connect/cs</value>
          </field>
          <field type='text-single' label='Group Name' var='groupname'/>
          <field type='text-single' label='Count' var='count'/>
          <field type='text-multi' label='Group Id' var='groupid'/>
          <field type='text-single' label='User Name' var='username'/>
          <field type='text-single' label='First Name' var='firstname'/>
          <field type='text-single' label='Last Name' var='lastname'/>
          <field type='text-single' label='SSO ID' var='ssoid_searchuser'/>
          <field type='text-multi' label='SSO ID' var='ssoid_lookupuser'/>
          <field type='text-multi' label='Email' var='email'/>
          <field type='text-multi' label='Phone Number' var='phonenum'/>
        </x>
      </query>
</iq>
]]></example>

      <p>The 'count' field defines the maximum number of results.</p>
      <p>The fields of 'groupname' and 'count' is to search group. </p>
      <p>The fields of 'username', 'firstname', 'lastname', 'ssoid_searchuser' and 'count' is to search user.</p>
      <p>The field of 'groupid' is to do group name lookup.</p>
      <p>The fields of 'ssoid_lookupuser', 'phonenum' and 'email' is to do user name lookup.</p>

      <example caption='Client Submits Search Form to Search Group'><![CDATA[
<iq type='set'
    from='juliet@example.com/balcony'
    to='cs.example.com'
    id='search4'
    xml:lang='en'>
    <query xmlns='jabber:iq:search'>
        <x xmlns='jabber:x:data' type='submit'>
            <field type='hidden' var='FORM_TYPE'>
                <value>http://webex.com/connect/cs</value>
            </field>
            <field var='groupname'>
                <value>GROUPNAME</value>
            </field>
            <field var='count'>
                <value>300</value>
            </field>
        </x>
    </query>
</iq>
]]></example>

      <example caption='Service Returns Search Results for Group'><![CDATA[
<iq type='result'
  to='juliet@example.com/balcony'
  from='cs.example.com'
  id='search4'
  xml:lang='en'>
  <query xmlns='jabber:iq:search'>
    <x xmlns='jabber:x:data' type='result'>
      <field type='hidden' var='FORM_TYPE'>
        <value>http://webex.com/connect/cs</value>
      </field>
      <reported>
        <field var='groupid' label='Group ID' type='text-single'/>
        <field var='groupname' label='Group Name' type='text-single'/>
      </reported>
      <item>
        <field var='groupid'><value>GROUPID1</value></field>
        <field var='groupname'><value>GROUPNAME1</value></field>
      </item>
      <item>
        <field var='groupid'><value>GROUPID2</value></field>
        <field var='groupname'><value>GROUPNAME2</value></field>
      </item>
    </x>
  </query>
</iq>
]]></example>

      <example caption='Entity Submits Username or SsoID to Search User'><![CDATA[
<iq type='set'
    from='juliet@example.com/balcony'
    to='cs.example.com'
    id='search4'
    xml:lang='en'>
  <query xmlns='jabber:iq:search'>
    <x xmlns='jabber:x:data' type='submit'>
      <field type='hidden' var='FORM_TYPE'>
        <value>http://webex.com/connect/cs</value>
      </field>
      <field var='username'>
        <value>USERNAME1</value>
      </field>
      <field var='ssoid_searchuser' >
        <value>SSOID2</value>
      </field>
      <field var='count'>
        <value>300</value>
      </field>
    </x>
  </query>
</iq>
]]></example>

      <example caption='Service Returns Search Results for User'><![CDATA[
<iq type='result'
    to='juliet@example.com/balcony'
    from='cs.example.com'
    id='search4'
    xml:lang='en'>
  <query xmlns='jabber:iq:search'>
    <x xmlns='jabber:x:data' type='result'>
      <field type='hidden' var='FORM_TYPE'>
        <value>http://webex.com/connect/cs</value>
      </field>
      <reported>
        <field var='groupid' label='Group ID' type='text-single'/>
        <field var='groupname' label='Group Name' type='text-single'/>
        <field var='userid' label='User ID' type='text-single'/>
        <field var='displayname' label='Display Name' type='text-single'/>
        <field var='username' label='User Name' type='text-single'/>
        <field var='phone' label='Phone Num' type='text-single'/>
        <field var='jobtitle' label='Job Title' type='text-single'/>
        <field var='email' label='Email' type='text-single'/>
        <field var='ssoid' label='SSO ID' type='text-single'/>
      </reported>
      <item>
        <field var='groupid'><value>GROUPID1</value></field>
        <field var='groupname'><value>GROUPNAME1</value></field>
        <field var='userid'><value>USERID1</value></field>
        <field var='displayname'><value>DISPLAYNAME1</value></field>
        <field var='username'><value>USERNAME1</value></field>
        <field var='phone'><value>PHONE1</value></field>
        <field var='jobtitle'><value>JOBTITLE1</value></field>
        <field var='email'><value>EMAIL1@a.com</value></field>
        <field var='ssoid'><value>SSOID1</value></field>
      </item>
      <item>
        <field var='groupid'><value>GROUPID2</value></field>
        <field var='groupname'><value>GROUPNAME2</value></field>
        <field var='userid'><value>USERID2</value></field>
        <field var='displayname'><value>DISPLAYNAME2</value></field>
        <field var='username'><value>USERNAME2</value></field>
        <field var='phone'><value>PHONE2</value></field>
        <field var='jobtitle'><value>JOBTITLE2</value></field>
        <field var='email'><value>EMAIL2@a.com</value></field>
        <field var='ssoid'><value>SSOID2</value></field>
      </item>
    </x>
  </query>
</iq>
]]></example>

      <example caption='Entity Submits Firstname/Lastname to Search User'><![CDATA[
<iq type='set'
    from='juliet@example.com/balcony'
    to='cs.example.com'
    id='search4'
    xml:lang='en'>
  <query xmlns='jabber:iq:search'>
    <x xmlns='jabber:x:data' type='submit'>
      <field type='hidden' var='FORM_TYPE'>
        <value>http://webex.com/connect/cs</value>
      </field>
      <field var='firstname'>
        <value>FIRSTNAME1</value>
      </field>
      <field var='lastname' >
        <value>LASTNAME1</value>
      </field>
      <field var='count'>
        <value>300</value>
      </field>
    </x>
  </query>
</iq>
]]></example>      

      <p>Client may submit firstname and/or lastname to search user. If both firstname and lastname are specified, server SHOULD do an exact match to obtain the search result. In all other cases, such as only firstname or lastname is present, or only username / ssoid is specified, server SHOULD do a partial match to get the result.</p>
      
      <example caption='Entity Submits Search Form to Do Group Name Lookup'><![CDATA[
<iq type='set'
    from='juliet@example.com/balcony'
    to='cs.example.com'
    id='search4'
    xml:lang='en'>
  <query xmlns='jabber:iq:search'>
    <x xmlns='jabber:x:data' type='submit'>
      <field type='hidden' var='FORM_TYPE'>
        <value>http://webex.com/connect/cs</value>
      </field>
      <field var='groupid'>
        <value>GROUPID1</value>
        <value>GROUPID2</value>
      </field>
    </x>
  </query>
</iq>
]]></example>

      <example caption='Service Returns Search Results for Group Name Lookup'><![CDATA[
<iq type='result'
    to='juliet@example.com/balcony'
    from='cs.example.com'
    id='search4'
    xml:lang='en'>
  <query xmlns='jabber:iq:search'>
    <x xmlns='jabber:x:data' type='result'>
      <field type='hidden' var='FORM_TYPE'>
        <value>http://webex.com/connect/cs</value>
      </field>
      <reported>
        <field var='groupid' label='Group ID' type='text-single'/>
        <field var='groupname' label='Group Name' type='text-single'/>
      </reported>
      <item>
        <field var='groupid'><value>GROUPID1</value></field>
        <field var='groupname'><value>GROUPNAME1</value></field>
      </item>
      <item>
        <field var='groupid'><value>GROUPID2</value></field>
        <field var='groupname'><value>GROUPNAME2</value></field>
      </item>
    </x>
  </query>
</iq>
]]></example>

      <example caption='Entity Submits Search Form to Do User Name Lookup'><![CDATA[
<iq type='set'
    from='juliet@example.com/balcony'
    to='cs.example.com'
    id='search4'
    xml:lang='en'>
  <query xmlns='jabber:iq:search'>
    <x xmlns='jabber:x:data' type='submit'>
      <field type='hidden' var='FORM_TYPE'>
        <value>http://webex.com/connect/cs</value>
      </field>
      <field var='ssoid_lookupuser' >
        <value>SSOID1</value>
        <value>SSOID2</value>
      </field>
      <field var='email'>
        <value>mail3@example.com</value>
        <value>mail4@example.com</value>
      </field>
      <field var='phonenum'>
        <value>1234567</value>
        <value>2345678</value>
      </field>
    </x>
  </query>
</iq>
]]></example>
      <p>Server SHOULD search for the email specified in the form within the fileds of "username", "displayname" and email in DB.</p>

      <example caption='Service Returns Search Results for User Name Lookup'><![CDATA[
<iq type='result'
    to='juliet@example.com/balcony'
    from='cs.example.com'
    id='search4'
    xml:lang='en'>
  <query xmlns='jabber:iq:search'>
    <x xmlns='jabber:x:data' type='result'>
      <field type='hidden' var='FORM_TYPE'>
        <value>http://webex.com/connect/cs</value>
      </field>
      <reported>
        <field var='email' label='Email' type='text-single'/>
        <field var='ssoid' label='SSO ID' type='text-single'/>
        <field var='displayname' label='Display Name' type='text-single'/>
        <field var='firstname' label='First Name' type='text-single'/>
        <field var='lastname' label='Last Name' type='text-single'/>
        <field var='phonenum' label='Phone Number' type='text-multi'/>
      </reported>
      <item>
        <field var='email'><value>mail1@example.com</value></field>
        <field var='ssoid'><value>SSOID1</value></field>
        <field var='displayname'><value>DISPLAYNAME1</value></field>
        <field var='firstname'><value>FIRSTNAME1</value></field>
        <field var='lastname'><value>LASTNAME1</value></field>
        <field var='phonenum'>
          <value desc='HOME'>1234567</value>
          <value desc='MOBILE'>1234567</value>
          <value desc='OFFICE'>1234567</value>
        </field>
      </item>
      <item>
        <field var='email'><value>mail2@example.com</value></field>
        <field var='ssoid'><value>SSOID2</value></field>
        <field var='displayname'><value>DISPLAYNAME2</value></field>
        <field var='firstname'><value>FIRSTNAME2</value></field>
        <field var='lastname'><value>LASTNAME2</value></field>
        <field var='phonenum'>
          <value desc='HOME'>1234567</value>
          <value desc='MOBILE'>1234567</value>
          <value desc='OFFICE'>1234567</value>
        </field>
      </item>
      <item>
        <field var='email'><value>mail3@example.com</value></field>
        <field var='ssoid'><value>SSOID3</value></field>
        <field var='displayname'><value>DISPLAYNAME3</value></field>
        <field var='firstname'><value>FIRSTNAME3</value></field>
        <field var='lastname'><value>LASTNAME3</value></field>
        <field var='phonenum'>
          <value desc='HOME'>1234567</value>
          <value desc='MOBILE'>1234567</value>
          <value desc='OFFICE'>1234567</value>
        </field>
      </item>
      <item>
        <field var='email'><value>mail4@example.com</value></field>
        <field var='ssoid'><value>SSOID4</value></field>
        <field var='displayname'><value>DISPLAYNAME4</value></field>
        <field var='firstname'><value>FIRSTNAME4</value></field>
        <field var='lastname'><value>LASTNAME4</value></field>
        <field var='phonenum'>
          <value desc='HOME'>1234567</value>
          <value desc='MOBILE'>1234567</value>
          <value desc='OFFICE'>1234567</value>
        </field>
      </item>
    </x>
  </query>
</iq>
]]></example>
       <p>If there are no matching directory entries, the service MUST return an empty <query/> element:</p>
<example caption='Service Informs User that No Records Match'><![CDATA[
<iq type='result'
    to='juliet@example.com/balcony'
    from='cs.example.com'
    id='search4'
    xml:lang='en'>
  <query xmlns='jabber:iq:search' />
</iq>
]]></example>
       </section3>

    </section2>
</section1>

<section1 topic='Security Considerations'>
  <p>The connection server will trust the JID of the sending user.</p>
</section1>

<section1 topic='IANA Considerations'>
  <p>There are no IANA considerations for this protocol.</p>
</section1>

<section1 topic='Jabber Registrar Considerations'>
  <p>There are no Jabber Registrar considerations for this protocol.</p>
</section1>
</jep>
